{"version":3,"sources":["coggers.png","aboutme/me.png","aboutme/aboutme.js","appDrawer/appDrawer.js","frontpage.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","console","log","ClickAwayListener","onClickAway","this","props","closeHandler","mouseEvent","isAboutMeOpen","Drawer","classes","paper","anchor","open","variant","transitionDuration","className","Typography","align","src","picOfMe","alt","List","ListItem","href","React","Component","AppList","AppDrawer","elevation","Divider","Tabs","orientation","TabList","forEach","app","index","push","Tab","label","RenderTabList","FrontPage","aboutMeOpenHandler","setState","aboutMeCloseHandler","state","isAppDrawerOpen","AppBar","position","Toolbar","onClick","Button","color","size","logo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,qWC+D5BC,E,iLAjDb,OADAC,QAAQC,IAAI,YAEX,kBAACC,EAAA,EAAD,CACCC,YAAaC,KAAKC,MAAMC,aACxBC,aAAYH,KAAKC,MAAMG,eAAgB,WAEvC,kBAACC,EAAA,EAAD,CACCC,QAAS,CAAEC,MAAO,eAClBC,OAAO,QACPC,KAAMT,KAAKC,MAAMG,cACjBM,QAAQ,aACRC,mBAAoB,KAEpB,yBAAKC,UAAU,eACd,kBAACC,EAAA,EAAD,CAAYH,QAAQ,KAAKI,MAAM,UAA/B,aAGA,yBAAKC,IAAKC,IAASC,IAAI,mBACvB,yBAAKL,UAAU,QACd,kBAACC,EAAA,EAAD,CAAYH,QAAQ,SAApB,kIAIC,6BAJD,IAIQ,6BAJR,kCAOA,kBAACQ,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,mCACA,kBAACA,EAAA,EAAD,KACC,uBAAGC,KAAK,oCAAR,aAED,kBAACD,EAAA,EAAD,KACC,uBAAGC,KAAK,6CAAR,aAID,kBAACD,EAAA,EAAD,KACC,uBAAGC,KAAK,sDAAR,uB,GAvCaC,IAAMC,W,wBCPtBC,G,MAAU,CAAC,WAAY,QAAS,QAAS,UAiChCC,M,iLA7Bb,OACC,kBAACnB,EAAA,EAAD,CACCoB,UAAW,EACXjB,OAAO,OACPE,QAAQ,YACRJ,QAAS,CAAEC,MAAO,gBAElB,yBAAKK,UAAU,iBACd,kBAACC,EAAA,EAAD,CAAYH,QAAQ,QAAQI,MAAM,UACjC,yCAED,kBAACY,EAAA,EAAD,MACA,yBAAKd,UAAU,QACd,kBAACe,EAAA,EAAD,CAAMC,YAAY,YAQxB,WACC,IAAIC,EAAU,GAId,OAHAN,EAAQO,QAAQ,SAACC,EAAKC,GACrBH,EAAQI,KAAK,kBAACC,EAAA,EAAD,CAAKC,MAAOJ,EAAKC,MAAOA,OAE/BH,EAb4BO,W,GAfZf,IAAMC,WC6Cfe,E,YA3Cd,WAAYpC,GAAQ,IAAD,8BAClB,4CAAMA,KAOPqC,mBAAqB,WACpB,EAAKC,SAAS,CAAEnC,eAAe,KATb,EAYnBoC,oBAAsB,WACrB,EAAKD,SAAS,CAAEnC,eAAe,KAX/B,EAAKqC,MAAQ,CACZrC,eAAe,EACfsC,iBAAiB,GAJA,E,sEAiBlB,OACC,6BACC,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQhC,UAAU,SAASa,UAAW,GACtD,kBAACoB,EAAA,EAAD,KACC,kBAAChC,EAAA,EAAD,CAAYH,QAAQ,MAApB,iCACA,yBAAKE,UAAU,UAAUkC,QAAS9C,KAAKsC,oBACtC,kBAACS,EAAA,EAAD,CAAQC,MAAM,UAAUtC,QAAQ,YAAYuC,KAAK,UAAjD,gBAMH,kBAAC,EAAD,CACC7C,cAAeJ,KAAKyC,MAAMrC,cAC1BF,aAAcF,KAAKwC,sBAEpB,4BAAQ5B,UAAU,cACjB,yBAAKG,IAAKmC,IAAMtC,UAAU,WAAWK,IAAI,SACzC,8E,GArCmBI,IAAMC,WCKxB6B,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzB,QACfmB,UAAUC,cAAcQ,YAI1BzE,QAAQC,IACN,iHAKE8D,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBpE,QAAQC,IAAI,sCAGR8D,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,UAO5BQ,MAAM,SAAAC,GACL7E,QAAQ6E,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,SDgBhD,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,aAAwB1B,OAAOC,SAASlC,MACpD4D,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,aAAN,sBAEP5B,IAgEV,SAAiCO,EAAOC,GAEtCuB,MAAMxB,GACHK,KAAK,SAAAoB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BV,OAAOC,SAASqC,aAKpBlC,EAAgBC,EAAOC,KAG1Ba,MAAM,WACL5E,QAAQC,IACN,mEArFA+F,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,KAAK,WACjCnE,QAAQC,IACN,gHAMJ4D,EAAgBC,EAAOC,MCvC/BE,K","file":"static/js/main.ae671d56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coggers.f46ae57b.png\";","module.exports = __webpack_public_path__ + \"static/media/me.2d73ec29.png\";","import React from \"react\";\r\nimport {\r\n\tClickAwayListener,\r\n\tDrawer,\r\n\tTypography,\r\n\tList,\r\n\tListItem\r\n} from \"@material-ui/core\";\r\nimport \"./aboutme.css\";\r\nimport picOfMe from \"./me.png\";\r\n\r\nclass AboutMe extends React.Component {\r\n\trender() {\r\n\t\tconsole.log(\"rendered\");\r\n\t\treturn (\r\n\t\t\t<ClickAwayListener\r\n\t\t\t\tonClickAway={this.props.closeHandler}\r\n\t\t\t\tmouseEvent={this.props.isAboutMeOpen ? \"onClick\" : false}\r\n\t\t\t>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tclasses={{ paper: \"DrawerPaper\" }}\r\n\t\t\t\t\tanchor=\"right\"\r\n\t\t\t\t\topen={this.props.isAboutMeOpen}\r\n\t\t\t\t\tvariant=\"persistent\"\r\n\t\t\t\t\ttransitionDuration={500}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"AboutMeInfo\">\r\n\t\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\t\tAbout Me:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<img src={picOfMe} alt=\"pictures of me\" />\r\n\t\t\t\t\t\t<div className=\"text\">\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\">\r\n\t\t\t\t\t\t\t\tHello, I'm Nelson Lai, This is my site that I use to test\r\n\t\t\t\t\t\t\t\tvarious things. I play video games and I love memes but I HATE\r\n\t\t\t\t\t\t\t\tweebs.\r\n\t\t\t\t\t\t\t\t<br /> <br />\r\n\t\t\t\t\t\t\t\tHeres some dumb info about me:\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t<ListItem>Email: NelsonL93@gmail.com</ListItem>\r\n\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://www.facebook.com/LNelson\">Facebook</a>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://www.dotabuff.com/players/33579516\">\r\n\t\t\t\t\t\t\t\t\t\tDotaBuff\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://www.instagram.com/neldogmillionaire/?hl=en\">\r\n\t\t\t\t\t\t\t\t\t\tInstagram\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer>\r\n\t\t\t</ClickAwayListener>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\nimport { Drawer, Tabs, Tab, Typography, Divider } from \"@material-ui/core\";\r\nimport \"./appDrawer.css\";\r\n\r\nconst AppList = [\"HomePage\", \"Test1\", \"Test2\", \"Test3\"];\r\n\r\nclass AppDrawer extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Drawer\r\n\t\t\t\televation={3}\r\n\t\t\t\tanchor=\"left\"\r\n\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\tclasses={{ paper: \"drawerPaper\" }}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"AppDrawerText\">\r\n\t\t\t\t\t<Typography variant=\"body1\" align=\"center\">\r\n\t\t\t\t\t\t<strong>Apps</strong>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<div className=\"Tabs\">\r\n\t\t\t\t\t\t<Tabs orientation=\"vertical\">{RenderTabList()}</Tabs>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Drawer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction RenderTabList() {\r\n\tlet TabList = [];\r\n\tAppList.forEach((app, index) => {\r\n\t\tTabList.push(<Tab label={app} index={index}></Tab>);\r\n\t});\r\n\treturn TabList;\r\n}\r\n\r\nexport default AppDrawer;\r\n","import React from \"react\";\r\nimport logo from \"./coggers.png\";\r\nimport \"./frontpage.css\";\r\nimport { AppBar, Toolbar, Button, Typography } from \"@material-ui/core\";\r\nimport AboutMe from \"./aboutme/aboutme\";\r\nimport AppDrawer from \"./appDrawer/appDrawer\";\r\n\r\nclass FrontPage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisAboutMeOpen: false,\r\n\t\t\tisAppDrawerOpen: false\r\n\t\t};\r\n\t}\r\n\r\n\taboutMeOpenHandler = () => {\r\n\t\tthis.setState({ isAboutMeOpen: true });\r\n\t};\r\n\r\n\taboutMeCloseHandler = () => {\r\n\t\tthis.setState({ isAboutMeOpen: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppDrawer />\r\n\t\t\t\t<AppBar position=\"fixed\" className=\"TopBar\" elevation={5}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Extremely Cool Site by Nelson</Typography>\r\n\t\t\t\t\t\t<div className=\"AboutMe\" onClick={this.aboutMeOpenHandler}>\r\n\t\t\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" size=\"medium\">\r\n\t\t\t\t\t\t\t\tAbout Me!\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<AboutMe\r\n\t\t\t\t\tisAboutMeOpen={this.state.isAboutMeOpen}\r\n\t\t\t\t\tcloseHandler={this.aboutMeCloseHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<header className=\"App-header\">\r\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t\t\t<p>Haha just testing stuff just a prank bros</p>\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FrontPage;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport FrontPage from \"./frontpage\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<FrontPage />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}